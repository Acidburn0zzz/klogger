<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.blackberry.klogger</groupId>
	<artifactId>klogger</artifactId>
	<version>0.7.0</version>

	<name>klogger-dev</name>
	<url>http://www.blackberry.com</url>
	
	<scm>
		<connection>scm:git:git@gitlab.rim.net:ipgbd-software/klogger.git</connection>
		<developerConnection>scm:git:git@gitlab.rim.net:ipgbd-software/klogger.git</developerConnection>
		<url>https://gitlab.rim.net/ipgbd-software/klogger</url>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<dependency>
			<groupId>com.blackberry.common</groupId>
			<artifactId>common</artifactId>
			<version>0.0.4</version>
		</dependency>


		<!-- Kafka dependencies -->
		<dependency>
			<groupId>com.blackberry.krackle</groupId>
			<artifactId>krackle</artifactId>
			<version>0.7.7</version>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- Monitoring dependencies -->
		<dependency>
			<groupId>com.codahale.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>3.0.1</version>
		</dependency>

		<!-- Testing dependencies -->
		<dependency>
			<groupId>com.blackberry.logdriver</groupId>
			<artifactId>test-util</artifactId>
			<version>3.0.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!--<finalName>${project.artifactId}-${project.version}-r${buildNumber}</finalName>-->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeScope>compile</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>true</doCheck>
					<doUpdate>true</doUpdate>		
					<scmBranchPropertyName>dev</scmBranchPropertyName>			
					<!--<format>{0,date,yyyy-MM-dd_HH-mm}_rev{1}</format>
					<items>
						<item>timestamp</item>
						<item>buildNumber</item>
					</items>-->
				</configuration>					
			</plugin>
			
			<!-- Build a DEB package -->
			<plugin>
				<artifactId>jdeb</artifactId>
				<groupId>org.vafer</groupId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
							<controlDir>src/deb/control</controlDir>
							<timestamped>true</timestamped>
							<dataSet>
								
								<!-- Copy the main artifact jar -->
								<data>
									<type>file</type>
									<!--<src>target/${project.artifactId}-${project.version}.jar</src>
									<dst>/opt/${project.artifactId}/lib/${project.artifactId}-${project.version}.jar</dst>-->
									<src>target/${project.build.finalName}.jar</src>
									<dst>/opt/${project.artifactId}/lib/${project.build.finalName}.jar</dst>
									<mapper>
										<type>perm</type>
										<filemode>644</filemode>
										<user>root</user>
										<group>root</group>
									</mapper>
								</data>
								
								<!-- Copy all required libraries -->
								<data>
									<type>directory</type>
									<src>target/lib</src>
									<includes>*.jar</includes>
									<mapper>
										<type>perm</type>
										<prefix>/opt/${project.artifactId}/lib</prefix>
										<filemode>644</filemode>
										<user>root</user>
										<group>root</group>
									</mapper>
								</data>
								
								<!-- Create required directories -->
								<data>
									<type>template</type>
									<paths>
										<path>/opt/${project.artifactId}/config</path>
										<path>/opt/${project.artifactId}/log</path>
										<path>/var/run/${project.artifactId}</path>
									</paths>
								</data>
								
								<!-- Copy the config sample(s) -->
								<data>
									<type>files</type>
									<paths>
										<path>${project.basedir}/conf/${project.artifactId}.properties.sample</path>
										<path>${project.basedir}/conf/${project.artifactId}-env.sh.sample</path>
										<path>${project.basedir}/conf/log4j.properties.sample</path>
									</paths>
									<dst>/opt/${project.artifactId}/config</dst>
								</data>
								
								<!-- Define the to-be user created configuration files
								<data>
									<type>files</type>
									<conffile>true</conffile>
									<paths>
										<path>/opt/${project.artifactId}/config/${project.artifactId}.properties</path>
										<path>/opt/${project.artifactId}/config/${project.artifactId}-env.sh</path>
										<path>/opt/${project.artifactId}/config/log4j.properties</path>
									</paths>
								</data>-->
								
								<!-- Copy the init upstart script -->
								<data>
									<src>${project.basedir}/init/klogger.conf</src>
									<dst>/etc/init/${project.artifactId}.conf</dst>
									<type>file</type>
								</data>
								
								<!-- Link the upstart file to -->
								<data>
									<type>link</type>
									<linkName>/etc/init.d/klogger</linkName>
									<linkTarget>/lib/init/upstart-job</linkTarget>
									<symlink>true</symlink>
								</data>								
								
							</dataSet>
						</configuration>
					</execution>
				</executions>
			</plugin>	
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Build-Info>${buildNumber}</Build-Info>
							<SCM-Branch>${scmBranch}</SCM-Branch>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
				only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
